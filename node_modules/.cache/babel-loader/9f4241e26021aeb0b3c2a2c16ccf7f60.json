{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/service-module.state.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/service-module.state.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport _omit from 'lodash/omit';\nexport default function makeDefaultState(servicePath, options) {\n  var nonStateProps = ['actions', 'getters', 'instanceDefaults', 'Model', 'mutations', 'service', 'setupInstance', 'state', 'actions'];\n  var state = {\n    ids: [],\n    keyedById: {},\n    copiesById: {},\n    tempsById: {},\n    tempsByNewId: {},\n    pagination: {\n      defaultLimit: null,\n      defaultSkip: null\n    },\n    isFindPending: false,\n    isGetPending: false,\n    isCreatePending: false,\n    isUpdatePending: false,\n    isPatchPending: false,\n    isRemovePending: false,\n    errorOnFind: null,\n    errorOnGet: null,\n    errorOnCreate: null,\n    errorOnUpdate: null,\n    errorOnPatch: null,\n    errorOnRemove: null,\n    modelName: null\n  };\n\n  if (options.Model) {\n    state.modelName = options.Model.modelName;\n  }\n\n  var startingState = _omit(options, nonStateProps);\n\n  return Object.assign({}, state, startingState);\n}",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/service-module.state.js"],"names":["_omit","makeDefaultState","servicePath","options","nonStateProps","state","ids","keyedById","copiesById","tempsById","tempsByNewId","pagination","defaultLimit","defaultSkip","isFindPending","isGetPending","isCreatePending","isUpdatePending","isPatchPending","isRemovePending","errorOnFind","errorOnGet","errorOnCreate","errorOnUpdate","errorOnPatch","errorOnRemove","modelName","Model","startingState","Object","assign"],"mappings":"AAAA;;;;;AAKA,OAAOA,KAAP,MAAkB,aAAlB;AACA,eAAe,SAASC,gBAAT,CAA0BC,WAA1B,EAAuCC,OAAvC,EAAgD;AAC7D,MAAMC,aAAa,GAAG,CACpB,SADoB,EAEpB,SAFoB,EAGpB,kBAHoB,EAIpB,OAJoB,EAKpB,WALoB,EAMpB,SANoB,EAOpB,eAPoB,EAQpB,OARoB,EASpB,SAToB,CAAtB;AAWA,MAAMC,KAAK,GAAG;AACZC,IAAAA,GAAG,EAAE,EADO;AAEZC,IAAAA,SAAS,EAAE,EAFC;AAGZC,IAAAA,UAAU,EAAE,EAHA;AAIZC,IAAAA,SAAS,EAAE,EAJC;AAKZC,IAAAA,YAAY,EAAE,EALF;AAMZC,IAAAA,UAAU,EAAE;AACVC,MAAAA,YAAY,EAAE,IADJ;AAEVC,MAAAA,WAAW,EAAE;AAFH,KANA;AAUZC,IAAAA,aAAa,EAAE,KAVH;AAWZC,IAAAA,YAAY,EAAE,KAXF;AAYZC,IAAAA,eAAe,EAAE,KAZL;AAaZC,IAAAA,eAAe,EAAE,KAbL;AAcZC,IAAAA,cAAc,EAAE,KAdJ;AAeZC,IAAAA,eAAe,EAAE,KAfL;AAgBZC,IAAAA,WAAW,EAAE,IAhBD;AAiBZC,IAAAA,UAAU,EAAE,IAjBA;AAkBZC,IAAAA,aAAa,EAAE,IAlBH;AAmBZC,IAAAA,aAAa,EAAE,IAnBH;AAoBZC,IAAAA,YAAY,EAAE,IApBF;AAqBZC,IAAAA,aAAa,EAAE,IArBH;AAsBZC,IAAAA,SAAS,EAAE;AAtBC,GAAd;;AAwBA,MAAIvB,OAAO,CAACwB,KAAZ,EAAmB;AACjBtB,IAAAA,KAAK,CAACqB,SAAN,GAAkBvB,OAAO,CAACwB,KAAR,CAAcD,SAAhC;AACD;;AACD,MAAME,aAAa,GAAG5B,KAAK,CAACG,OAAD,EAAUC,aAAV,CAA3B;;AACA,SAAOyB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBzB,KAAlB,EAAyBuB,aAAzB,CAAP;AACD","sourcesContent":["/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport _omit from 'lodash/omit'\nexport default function makeDefaultState(servicePath, options) {\n  const nonStateProps = [\n    'actions',\n    'getters',\n    'instanceDefaults',\n    'Model',\n    'mutations',\n    'service',\n    'setupInstance',\n    'state',\n    'actions'\n  ]\n  const state = {\n    ids: [],\n    keyedById: {},\n    copiesById: {},\n    tempsById: {},\n    tempsByNewId: {},\n    pagination: {\n      defaultLimit: null,\n      defaultSkip: null\n    },\n    isFindPending: false,\n    isGetPending: false,\n    isCreatePending: false,\n    isUpdatePending: false,\n    isPatchPending: false,\n    isRemovePending: false,\n    errorOnFind: null,\n    errorOnGet: null,\n    errorOnCreate: null,\n    errorOnUpdate: null,\n    errorOnPatch: null,\n    errorOnRemove: null,\n    modelName: null\n  }\n  if (options.Model) {\n    state.modelName = options.Model.modelName\n  }\n  const startingState = _omit(options, nonStateProps)\n  return Object.assign({}, state, startingState)\n}\n"]}]}