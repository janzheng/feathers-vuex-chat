{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/src/feathers-client.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/src/feathers-client.js","mtime":1576554909653},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1572970654460}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n// src/feathers-client.js\nimport feathers from '@feathersjs/feathers';\nimport socketio from '@feathersjs/socketio-client';\nimport authClient from '@feathersjs/authentication-client';\nimport io from 'socket.io-client';\nimport feathersVuex from 'feathers-vuex'; // or '@/libs/feathers-vuex' if you're copying feathers-vuex as mentioned earlier.\n\nimport { iff, discard } from 'feathers-hooks-common'; // Setup the Feathers client\n\nvar host = 'http://localhost:3030'; // process.env.VUE_APP_API_URL\n\nvar socket = io(host, {\n  transports: ['websocket']\n});\nvar feathersClient = feathers().configure(socketio(socket)).configure(authClient({\n  storage: window.localStorage\n})) // Issue #266\n.hooks({\n  before: {\n    all: [iff(function (context) {\n      return ['create', 'update', 'patch'].includes(context.method);\n    }, discard('__id', '__isTemp'))]\n  }\n});\nexport default feathersClient; // Setup feathers-vuex\n\nvar _feathersVuex = feathersVuex(feathersClient, {\n  serverAlias: 'api',\n  // or whatever that makes sense for your project\n  idField: '_id' // `id` and `_id` are both supported, so this is only necessary if you're using something else.\n\n}),\n    makeServicePlugin = _feathersVuex.makeServicePlugin,\n    makeAuthPlugin = _feathersVuex.makeAuthPlugin,\n    BaseModel = _feathersVuex.BaseModel,\n    models = _feathersVuex.models,\n    clients = _feathersVuex.clients,\n    FeathersVuex = _feathersVuex.FeathersVuex;\n\nexport { makeAuthPlugin, makeServicePlugin, BaseModel, models, clients, FeathersVuex }; // == AŞAĞIDAKİ BÖLÜM KAynağı: 'https://docs.feathersjs.com/api/authentication/client.html#customization'\n// const feathers = require('@feathersjs/feathers');\n// const socketio = require('@feathersjs/socketio-client');\n// const io = require('socket.io-client');\n// const auth = require('@feathersjs/authentication-client');\n// const socket = io('http://localhost:3030');\n// const app = feathers();\n// class MyAuthenticationClient extends auth.AuthenticationClient {\n//   getFromLocation(location) {\n//     // Do custom location things here\n//     return super.getFromLocation(location);\n//   }\n// }\n// // Setup the transport (Rest, Socket, etc.) here\n// app.configure(socketio(socket));\n// // Pass the custom authentication client class as the `Authenticaiton` option\n// app.configure(\n//   auth({\n//     Authentication: MyAuthenticationClient,\n//   }),\n// );",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/src/feathers-client.js"],"names":["feathers","socketio","authClient","io","feathersVuex","iff","discard","host","socket","transports","feathersClient","configure","storage","window","localStorage","hooks","before","all","context","includes","method","serverAlias","idField","makeServicePlugin","makeAuthPlugin","BaseModel","models","clients","FeathersVuex"],"mappings":";;AAAA;AAEA,OAAOA,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAA0C;;AAC1C,SAASC,GAAT,EAAcC,OAAd,QAA6B,uBAA7B,C,CAEA;;AACA,IAAMC,IAAI,GAAG,uBAAb,C,CAAsC;;AACtC,IAAMC,MAAM,GAAGL,EAAE,CAACI,IAAD,EAAO;AAAEE,EAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,CAAP,CAAjB;AACA,IAAMC,cAAc,GAAGV,QAAQ,GAC5BW,SADoB,CACVV,QAAQ,CAACO,MAAD,CADE,EAEpBG,SAFoB,CAEVT,UAAU,CAAC;AAAEU,EAAAA,OAAO,EAAEC,MAAM,CAACC;AAAlB,CAAD,CAFA,EAIrB;AAJqB,CAKpBC,KALoB,CAKd;AACLC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,CACHZ,GAAG,CACD,UAAAa,OAAO;AAAA,aAAI,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8BC,QAA9B,CAAuCD,OAAO,CAACE,MAA/C,CAAJ;AAAA,KADN,EAEDd,OAAO,CAAC,MAAD,EAAS,UAAT,CAFN,CADA;AADC;AADH,CALc,CAAvB;AAgBA,eAAeI,cAAf,C,CAEA;;oBAQIN,YAAY,CAACM,cAAD,EAAiB;AAC/BW,EAAAA,WAAW,EAAE,KADkB;AACX;AACpBC,EAAAA,OAAO,EAAE,KAFsB,CAEf;;AAFe,CAAjB,C;IANdC,iB,iBAAAA,iB;IACAC,c,iBAAAA,c;IACAC,S,iBAAAA,S;IACAC,M,iBAAAA,M;IACAC,O,iBAAAA,O;IACAC,Y,iBAAAA,Y;;AAMF,SACEJ,cADF,EAEED,iBAFF,EAGEE,SAHF,EAIEC,MAJF,EAKEC,OALF,EAMEC,YANF,G,CASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// src/feathers-client.js\n\nimport feathers from '@feathersjs/feathers';\nimport socketio from '@feathersjs/socketio-client';\nimport authClient from '@feathersjs/authentication-client';\nimport io from 'socket.io-client';\nimport feathersVuex from 'feathers-vuex'; // or '@/libs/feathers-vuex' if you're copying feathers-vuex as mentioned earlier.\nimport { iff, discard } from 'feathers-hooks-common';\n\n// Setup the Feathers client\nconst host = 'http://localhost:3030'; // process.env.VUE_APP_API_URL\nconst socket = io(host, { transports: ['websocket'] });\nconst feathersClient = feathers()\n  .configure(socketio(socket))\n  .configure(authClient({ storage: window.localStorage }))\n\n  // Issue #266\n  .hooks({\n    before: {\n      all: [\n        iff(\n          context => ['create', 'update', 'patch'].includes(context.method),\n          discard('__id', '__isTemp'),\n        ),\n      ],\n    },\n  });\n\nexport default feathersClient;\n\n// Setup feathers-vuex\nconst {\n  makeServicePlugin,\n  makeAuthPlugin,\n  BaseModel,\n  models,\n  clients,\n  FeathersVuex,\n} = feathersVuex(feathersClient, {\n  serverAlias: 'api', // or whatever that makes sense for your project\n  idField: '_id', // `id` and `_id` are both supported, so this is only necessary if you're using something else.\n});\n\nexport {\n  makeAuthPlugin,\n  makeServicePlugin,\n  BaseModel,\n  models,\n  clients,\n  FeathersVuex,\n};\n\n// == AŞAĞIDAKİ BÖLÜM KAynağı: 'https://docs.feathersjs.com/api/authentication/client.html#customization'\n\n// const feathers = require('@feathersjs/feathers');\n// const socketio = require('@feathersjs/socketio-client');\n// const io = require('socket.io-client');\n// const auth = require('@feathersjs/authentication-client');\n\n// const socket = io('http://localhost:3030');\n// const app = feathers();\n\n// class MyAuthenticationClient extends auth.AuthenticationClient {\n//   getFromLocation(location) {\n//     // Do custom location things here\n//     return super.getFromLocation(location);\n//   }\n// }\n\n// // Setup the transport (Rest, Socket, etc.) here\n// app.configure(socketio(socket));\n\n// // Pass the custom authentication client class as the `Authenticaiton` option\n// app.configure(\n//   auth({\n//     Authentication: MyAuthenticationClient,\n//   }),\n// );\n"]}]}