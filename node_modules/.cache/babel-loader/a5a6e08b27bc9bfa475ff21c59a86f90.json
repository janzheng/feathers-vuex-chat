{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/auth-module/make-auth-plugin.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/auth-module/make-auth-plugin.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["import setupState from \"./auth-module.state\";\nimport setupGetters from \"./auth-module.getters\";\nimport setupMutations from \"./auth-module.mutations\";\nimport setupActions from \"./auth-module.actions\";\nvar defaults = {\n  namespace: 'auth',\n  userService: '',\n  serverAlias: 'api',\n  debug: false,\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {} // for custom actions\n\n};\nexport default function authPluginInit(feathersClient, globalOptions) {\n  if (!feathersClient || !feathersClient.service) {\n    throw new Error('You must pass a Feathers Client instance to feathers-vuex');\n  }\n\n  return function makeAuthPlugin(options) {\n    options = Object.assign({}, defaults, {\n      serverAlias: globalOptions.serverAlias\n    }, options);\n\n    if (!feathersClient.authenticate) {\n      throw new Error('You must register the @feathersjs/authentication-client plugin before using the feathers-vuex auth module');\n    }\n\n    if (options.debug && options.userService && !options.serverAlias) {\n      console.warn('A userService was provided, but no serverAlias was provided. To make sure the user record is an instance of the User model, a serverAlias must be provided.');\n    }\n\n    var defaultState = setupState(options);\n    var defaultGetters = setupGetters();\n    var defaultMutations = setupMutations();\n    var defaultActions = setupActions(feathersClient);\n    return function setupStore(store) {\n      var _options = options,\n          namespace = _options.namespace;\n      store.registerModule(namespace, {\n        namespaced: true,\n        state: Object.assign({}, defaultState, options.state),\n        getters: Object.assign({}, defaultGetters, options.getters),\n        mutations: Object.assign({}, defaultMutations, options.mutations),\n        actions: Object.assign({}, defaultActions, options.actions)\n      });\n    };\n  };\n}",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/auth-module/make-auth-plugin.js"],"names":["setupState","setupGetters","setupMutations","setupActions","defaults","namespace","userService","serverAlias","debug","state","getters","mutations","actions","authPluginInit","feathersClient","globalOptions","service","Error","makeAuthPlugin","options","Object","assign","authenticate","console","warn","defaultState","defaultGetters","defaultMutations","defaultActions","setupStore","store","registerModule","namespaced"],"mappings":"AAAA,OAAOA,UAAP;AACA,OAAOC,YAAP;AACA,OAAOC,cAAP;AACA,OAAOC,YAAP;AACA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,SAAS,EAAE,MADI;AAEfC,EAAAA,WAAW,EAAE,EAFE;AAGfC,EAAAA,WAAW,EAAE,KAHE;AAIfC,EAAAA,KAAK,EAAE,KAJQ;AAKfC,EAAAA,KAAK,EAAE,EALQ;AAMfC,EAAAA,OAAO,EAAE,EANM;AAOfC,EAAAA,SAAS,EAAE,EAPI;AAQfC,EAAAA,OAAO,EAAE,EARM,CAQH;;AARG,CAAjB;AAUA,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwCC,aAAxC,EAAuD;AACpE,MAAI,CAACD,cAAD,IAAmB,CAACA,cAAc,CAACE,OAAvC,EAAgD;AAC9C,UAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACD;;AACD,SAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACtCA,IAAAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CACR,EADQ,EAERjB,QAFQ,EAGR;AAAEG,MAAAA,WAAW,EAAEQ,aAAa,CAACR;AAA7B,KAHQ,EAIRY,OAJQ,CAAV;;AAMA,QAAI,CAACL,cAAc,CAACQ,YAApB,EAAkC;AAChC,YAAM,IAAIL,KAAJ,CACJ,2GADI,CAAN;AAGD;;AACD,QAAIE,OAAO,CAACX,KAAR,IAAiBW,OAAO,CAACb,WAAzB,IAAwC,CAACa,OAAO,CAACZ,WAArD,EAAkE;AAChEgB,MAAAA,OAAO,CAACC,IAAR,CACE,6JADF;AAGD;;AACD,QAAMC,YAAY,GAAGzB,UAAU,CAACmB,OAAD,CAA/B;AACA,QAAMO,cAAc,GAAGzB,YAAY,EAAnC;AACA,QAAM0B,gBAAgB,GAAGzB,cAAc,EAAvC;AACA,QAAM0B,cAAc,GAAGzB,YAAY,CAACW,cAAD,CAAnC;AACA,WAAO,SAASe,UAAT,CAAoBC,KAApB,EAA2B;AAAA,qBACVX,OADU;AAAA,UACxBd,SADwB,YACxBA,SADwB;AAEhCyB,MAAAA,KAAK,CAACC,cAAN,CAAqB1B,SAArB,EAAgC;AAC9B2B,QAAAA,UAAU,EAAE,IADkB;AAE9BvB,QAAAA,KAAK,EAAEW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBI,YAAlB,EAAgCN,OAAO,CAACV,KAAxC,CAFuB;AAG9BC,QAAAA,OAAO,EAAEU,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBK,cAAlB,EAAkCP,OAAO,CAACT,OAA1C,CAHqB;AAI9BC,QAAAA,SAAS,EAAES,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBM,gBAAlB,EAAoCR,OAAO,CAACR,SAA5C,CAJmB;AAK9BC,QAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBO,cAAlB,EAAkCT,OAAO,CAACP,OAA1C;AALqB,OAAhC;AAOD,KATD;AAUD,GA/BD;AAgCD","sourcesContent":["import setupState from './auth-module.state'\nimport setupGetters from './auth-module.getters'\nimport setupMutations from './auth-module.mutations'\nimport setupActions from './auth-module.actions'\nconst defaults = {\n  namespace: 'auth',\n  userService: '',\n  serverAlias: 'api',\n  debug: false,\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {} // for custom actions\n}\nexport default function authPluginInit(feathersClient, globalOptions) {\n  if (!feathersClient || !feathersClient.service) {\n    throw new Error('You must pass a Feathers Client instance to feathers-vuex')\n  }\n  return function makeAuthPlugin(options) {\n    options = Object.assign(\n      {},\n      defaults,\n      { serverAlias: globalOptions.serverAlias },\n      options\n    )\n    if (!feathersClient.authenticate) {\n      throw new Error(\n        'You must register the @feathersjs/authentication-client plugin before using the feathers-vuex auth module'\n      )\n    }\n    if (options.debug && options.userService && !options.serverAlias) {\n      console.warn(\n        'A userService was provided, but no serverAlias was provided. To make sure the user record is an instance of the User model, a serverAlias must be provided.'\n      )\n    }\n    const defaultState = setupState(options)\n    const defaultGetters = setupGetters()\n    const defaultMutations = setupMutations()\n    const defaultActions = setupActions(feathersClient)\n    return function setupStore(store) {\n      const { namespace } = options\n      store.registerModule(namespace, {\n        namespaced: true,\n        state: Object.assign({}, defaultState, options.state),\n        getters: Object.assign({}, defaultGetters, options.getters),\n        mutations: Object.assign({}, defaultMutations, options.mutations),\n        actions: Object.assign({}, defaultActions, options.actions)\n      })\n    }\n  }\n}\n"]}]}