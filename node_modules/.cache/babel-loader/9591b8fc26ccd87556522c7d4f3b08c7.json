{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/global-clients.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/global-clients.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\n\n/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport _get from 'lodash/get';\n/**\n * A global object that holds references to all Model Classes in the application.\n */\n\nexport var clients = {\n  byAlias: {},\n  byHost: {}\n};\n/**\n * prepareAddModel wraps options in a closure around addModel\n * @param options\n */\n\nexport function addClient(_ref) {\n  var client = _ref.client,\n      serverAlias = _ref.serverAlias;\n  // Save reference to the clients by host uri, if it was available.\n  var uri = '';\n\n  if (client.io) {\n    uri = _get(client, 'io.io.uri');\n  }\n\n  if (uri) {\n    clients.byHost[uri] = client;\n  } // Save reference to clients by serverAlias.\n\n\n  clients.byAlias[serverAlias] = client;\n}\nexport function clearClients() {\n  function deleteKeys(path) {\n    Object.keys(clients[path]).forEach(function (key) {\n      delete clients[path][key];\n    });\n  }\n\n  deleteKeys('byAlias');\n  deleteKeys('byHost');\n}",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/global-clients.js"],"names":["_get","clients","byAlias","byHost","addClient","client","serverAlias","uri","io","clearClients","deleteKeys","path","Object","keys","forEach","key"],"mappings":";;;AAAA;;;;;AAKA,OAAOA,IAAP,MAAiB,YAAjB;AACA;;;;AAGA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,OAAO,EAAE,EADY;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAhB;AAIP;;;;;AAIA,OAAO,SAASC,SAAT,OAA4C;AAAA,MAAvBC,MAAuB,QAAvBA,MAAuB;AAAA,MAAfC,WAAe,QAAfA,WAAe;AACjD;AACA,MAAIC,GAAG,GAAG,EAAV;;AACA,MAAIF,MAAM,CAACG,EAAX,EAAe;AACbD,IAAAA,GAAG,GAAGP,IAAI,CAACK,MAAD,EAAS,WAAT,CAAV;AACD;;AACD,MAAIE,GAAJ,EAAS;AACPN,IAAAA,OAAO,CAACE,MAAR,CAAeI,GAAf,IAAsBF,MAAtB;AACD,GARgD,CASjD;;;AACAJ,EAAAA,OAAO,CAACC,OAAR,CAAgBI,WAAhB,IAA+BD,MAA/B;AACD;AACD,OAAO,SAASI,YAAT,GAAwB;AAC7B,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxBC,IAAAA,MAAM,CAACC,IAAP,CAAYZ,OAAO,CAACU,IAAD,CAAnB,EAA2BG,OAA3B,CAAmC,UAAAC,GAAG,EAAI;AACxC,aAAOd,OAAO,CAACU,IAAD,CAAP,CAAcI,GAAd,CAAP;AACD,KAFD;AAGD;;AACDL,EAAAA,UAAU,CAAC,SAAD,CAAV;AACAA,EAAAA,UAAU,CAAC,QAAD,CAAV;AACD","sourcesContent":["/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport _get from 'lodash/get'\n/**\n * A global object that holds references to all Model Classes in the application.\n */\nexport const clients = {\n  byAlias: {},\n  byHost: {}\n}\n/**\n * prepareAddModel wraps options in a closure around addModel\n * @param options\n */\nexport function addClient({ client, serverAlias }) {\n  // Save reference to the clients by host uri, if it was available.\n  let uri = ''\n  if (client.io) {\n    uri = _get(client, 'io.io.uri')\n  }\n  if (uri) {\n    clients.byHost[uri] = client\n  }\n  // Save reference to clients by serverAlias.\n  clients.byAlias[serverAlias] = client\n}\nexport function clearClients() {\n  function deleteKeys(path) {\n    Object.keys(clients[path]).forEach(key => {\n      delete clients[path][key]\n    })\n  }\n  deleteKeys('byAlias')\n  deleteKeys('byHost')\n}\n"]}]}