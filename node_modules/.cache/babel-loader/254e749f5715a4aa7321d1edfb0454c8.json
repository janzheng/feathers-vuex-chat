{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/FeathersVuexFind.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/FeathersVuexFind.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/web.dom.iterable\";\nimport { randomString, getQueryInfo } from \"./utils\";\nimport _get from 'lodash/get';\nexport default {\n  props: {\n    service: {\n      type: String,\n      required: true\n    },\n    query: {\n      type: Object,\n      default: null\n    },\n    queryWhen: {\n      type: [Boolean, Function],\n      default: true\n    },\n    // If a separate query is desired to fetch data, use fetchQuery\n    // The watchers will automatically be updated, so you don't have to write 'fetchQuery.propName'\n    fetchQuery: {\n      type: Object\n    },\n    watch: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n    local: {\n      type: Boolean,\n      default: false\n    },\n    editScope: {\n      type: Function,\n      default: function _default(scope) {\n        return scope;\n      }\n    },\n    qid: {\n      type: String,\n      default: function _default() {\n        return randomString(10);\n      }\n    },\n\n    /**\n     * Set `temps` to true to include temporary records from the store.\n     */\n    temps: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      isFindPending: false,\n      queryId: null,\n      pageId: null\n    };\n  },\n  computed: {\n    items: function items() {\n      var query = this.query,\n          service = this.service,\n          $store = this.$store,\n          temps = this.temps;\n      var params = {\n        query: query,\n        temps: temps\n      };\n      return query ? $store.getters[\"\".concat(service, \"/find\")](params).data : [];\n    },\n    pagination: function pagination() {\n      return this.$store.state[this.service].pagination[this.qid];\n    },\n    queryInfo: function queryInfo() {\n      if (this.pagination == null || this.queryId == null) return {};\n      return _get(this.pagination, \"[\".concat(this.queryId, \"]\")) || {};\n    },\n    pageInfo: function pageInfo() {\n      if (this.pagination == null || this.queryId == null || this.pageId == null) return {};\n      return _get(this.pagination, \"[\".concat(this.queryId, \"][\").concat(this.pageId, \"]\")) || {};\n    },\n    scope: function scope() {\n      var items = this.items,\n          isFindPending = this.isFindPending,\n          pagination = this.pagination,\n          queryInfo = this.queryInfo,\n          pageInfo = this.pageInfo;\n      var defaultScope = {\n        isFindPending: isFindPending,\n        pagination: pagination,\n        items: items,\n        queryInfo: queryInfo,\n        pageInfo: pageInfo\n      };\n      return this.editScope(defaultScope) || defaultScope;\n    }\n  },\n  methods: {\n    findData: function findData() {\n      var _this = this;\n\n      var query = this.fetchQuery || this.query;\n\n      if (typeof this.queryWhen === 'function' ? this.queryWhen(this.query) : this.queryWhen) {\n        this.isFindPending = true;\n\n        if (query) {\n          var params = {\n            query: query,\n            qid: this.qid || 'default'\n          };\n          return this.$store.dispatch(\"\".concat(this.service, \"/find\"), params).then(function (response) {\n            _this.isFindPending = false;\n\n            var _getQueryInfo = getQueryInfo(params, response),\n                queryId = _getQueryInfo.queryId,\n                pageId = _getQueryInfo.pageId;\n\n            _this.queryId = queryId;\n            _this.pageId = pageId;\n          });\n        }\n      }\n    },\n    fetchData: function fetchData() {\n      if (!this.local) {\n        if (this.query) {\n          return this.findData();\n        } else {\n          // TODO: access debug boolean from from the store config, somehow.\n          // eslint-disable-next-line no-console\n          console.log(\"No query and no id provided, so no data will be fetched.\");\n        }\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    if (!this.$FeathersVuex) {\n      throw new Error(\"You must first Vue.use the FeathersVuex plugin before using the 'FeathersVuexFind' component.\");\n    }\n\n    if (!this.$store.state[this.service]) {\n      throw new Error(\"The '\".concat(this.service, \"' plugin not registered with feathers-vuex\"));\n    }\n\n    var watch = Array.isArray(this.watch) ? this.watch : [this.watch];\n\n    if (this.fetchQuery || this.query) {\n      watch.forEach(function (prop) {\n        if (typeof prop !== 'string') {\n          throw new Error(\"Values in the 'watch' array must be strings.\");\n        }\n\n        if (_this2.fetchQuery) {\n          if (prop.startsWith('query')) {\n            prop.replace('query', 'fetchQuery');\n          }\n        }\n\n        _this2.$watch(prop, _this2.fetchData);\n      });\n      this.fetchData();\n    }\n  },\n  render: function render() {\n    return this.$scopedSlots.default(this.scope);\n  }\n};",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/FeathersVuexFind.js"],"names":["randomString","getQueryInfo","_get","props","service","type","String","required","query","Object","default","queryWhen","Boolean","Function","fetchQuery","watch","Array","local","editScope","scope","qid","temps","data","isFindPending","queryId","pageId","computed","items","$store","params","getters","pagination","state","queryInfo","pageInfo","defaultScope","methods","findData","dispatch","then","response","fetchData","console","log","created","$FeathersVuex","Error","isArray","forEach","prop","startsWith","replace","$watch","render","$scopedSlots"],"mappings":"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","sourcesContent":["import { randomString, getQueryInfo } from './utils'\nimport _get from 'lodash/get'\nexport default {\n  props: {\n    service: {\n      type: String,\n      required: true\n    },\n    query: {\n      type: Object,\n      default: null\n    },\n    queryWhen: {\n      type: [Boolean, Function],\n      default: true\n    },\n    // If a separate query is desired to fetch data, use fetchQuery\n    // The watchers will automatically be updated, so you don't have to write 'fetchQuery.propName'\n    fetchQuery: {\n      type: Object\n    },\n    watch: {\n      type: [String, Array],\n      default() {\n        return []\n      }\n    },\n    local: {\n      type: Boolean,\n      default: false\n    },\n    editScope: {\n      type: Function,\n      default(scope) {\n        return scope\n      }\n    },\n    qid: {\n      type: String,\n      default() {\n        return randomString(10)\n      }\n    },\n    /**\n     * Set `temps` to true to include temporary records from the store.\n     */\n    temps: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    isFindPending: false,\n    queryId: null,\n    pageId: null\n  }),\n  computed: {\n    items() {\n      const { query, service, $store, temps } = this\n      const params = { query, temps }\n      return query ? $store.getters[`${service}/find`](params).data : []\n    },\n    pagination() {\n      return this.$store.state[this.service].pagination[this.qid]\n    },\n    queryInfo() {\n      if (this.pagination == null || this.queryId == null) return {}\n      return _get(this.pagination, `[${this.queryId}]`) || {}\n    },\n    pageInfo() {\n      if (\n        this.pagination == null ||\n        this.queryId == null ||\n        this.pageId == null\n      )\n        return {}\n      return _get(this.pagination, `[${this.queryId}][${this.pageId}]`) || {}\n    },\n    scope() {\n      const { items, isFindPending, pagination, queryInfo, pageInfo } = this\n      const defaultScope = {\n        isFindPending,\n        pagination,\n        items,\n        queryInfo,\n        pageInfo\n      }\n      return this.editScope(defaultScope) || defaultScope\n    }\n  },\n  methods: {\n    findData() {\n      const query = this.fetchQuery || this.query\n      if (\n        typeof this.queryWhen === 'function'\n          ? this.queryWhen(this.query)\n          : this.queryWhen\n      ) {\n        this.isFindPending = true\n        if (query) {\n          const params = { query, qid: this.qid || 'default' }\n          return this.$store\n            .dispatch(`${this.service}/find`, params)\n            .then(response => {\n              this.isFindPending = false\n              const { queryId, pageId } = getQueryInfo(params, response)\n              this.queryId = queryId\n              this.pageId = pageId\n            })\n        }\n      }\n    },\n    fetchData() {\n      if (!this.local) {\n        if (this.query) {\n          return this.findData()\n        } else {\n          // TODO: access debug boolean from from the store config, somehow.\n          // eslint-disable-next-line no-console\n          console.log(\n            `No query and no id provided, so no data will be fetched.`\n          )\n        }\n      }\n    }\n  },\n  created() {\n    if (!this.$FeathersVuex) {\n      throw new Error(\n        `You must first Vue.use the FeathersVuex plugin before using the 'FeathersVuexFind' component.`\n      )\n    }\n    if (!this.$store.state[this.service]) {\n      throw new Error(\n        `The '${this.service}' plugin not registered with feathers-vuex`\n      )\n    }\n    const watch = Array.isArray(this.watch) ? this.watch : [this.watch]\n    if (this.fetchQuery || this.query) {\n      watch.forEach(prop => {\n        if (typeof prop !== 'string') {\n          throw new Error(`Values in the 'watch' array must be strings.`)\n        }\n        if (this.fetchQuery) {\n          if (prop.startsWith('query')) {\n            prop.replace('query', 'fetchQuery')\n          }\n        }\n        this.$watch(prop, this.fetchData)\n      })\n      this.fetchData()\n    }\n  },\n  render() {\n    return this.$scopedSlots.default(this.scope)\n  }\n}\n"]}]}