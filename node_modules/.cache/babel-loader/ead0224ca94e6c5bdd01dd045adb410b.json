{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/FeathersVuexGet.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/FeathersVuexGet.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport _toConsumableArray from \"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\nexport default {\n  props: {\n    /**\n     * The path of the service from which to pull records.\n     */\n    service: {\n      type: String,\n      required: true\n    },\n\n    /**\n     * Must match the `serverAlias` that was provided in the service's configuration.\n     */\n    serverAlias: {\n      type: String,\n      default: 'api'\n    },\n\n    /**\n     * By default, `query` is used to get data from the Vuex store AND the API request.\n     * If you specify a `fetchQuery`, then `query` will only be used for the Vuex store.\n     */\n    query: {\n      type: Object,\n      default: null\n    },\n\n    /**\n     * When `queryWhen` evaluates to false, no API request will be made.\n     */\n    queryWhen: {\n      type: [Boolean, Function],\n      default: true\n    },\n    // For get requests\n    id: {\n      type: [Number, String],\n      default: null\n    },\n\n    /**\n     * If a separate query is desired to fetch data, use fetchQuery\n     * The watchers are automatically updated, so you don't have to write 'fetchQuery.propName'\n     */\n    fetchQuery: {\n      type: Object\n    },\n\n    /**\n     * Specify which properties in the query to watch and re-trigger API requests.\n     */\n    watch: {\n      type: [String, Array],\n      default: function _default() {\n        return [];\n      }\n    },\n\n    /**\n     * Set `local` to true to only requests from the Vuex data store and not make API requests.\n     */\n    local: {\n      type: Boolean,\n      default: false\n    },\n\n    /**\n     * This function is called by the getter and allows you to intercept the `item` in the\n     * response to pass it into the parent component's scope.  It's a dirty little cheater\n     * function (because it's called from a getter), but it actually works well  ;)\n     */\n    editScope: {\n      type: Function,\n      default: function _default(scope) {\n        return scope;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      isFindPending: false,\n      isGetPending: false\n    };\n  },\n  computed: {\n    item: function item() {\n      var getArgs = this.getArgs(this.query);\n\n      if (this.id) {\n        return this.$store.getters[\"\".concat(this.service, \"/get\")](getArgs.length === 1 ? this.id : getArgs) || null;\n      } else {\n        return null;\n      }\n    },\n    scope: function scope() {\n      var item = this.item,\n          isGetPending = this.isGetPending;\n      var defaultScope = {\n        item: item,\n        isGetPending: isGetPending\n      };\n      return this.editScope(defaultScope) || defaultScope;\n    }\n  },\n  methods: {\n    getArgs: function getArgs(queryToUse) {\n      var query = queryToUse || this.fetchQuery || this.query;\n      var getArgs = [this.id];\n\n      if (query && Object.keys(query).length > 0) {\n        getArgs.push({\n          query: query\n        });\n      }\n\n      return getArgs;\n    },\n    getData: function getData() {\n      var _this = this;\n\n      var getArgs = this.getArgs();\n\n      if (typeof this.queryWhen === 'function' ? this.queryWhen.apply(this, _toConsumableArray(getArgs)) : this.queryWhen) {\n        this.isGetPending = true;\n\n        if (this.id) {\n          return this.$store.dispatch(\"\".concat(this.service, \"/get\"), getArgs.length === 1 ? this.id : getArgs).then(function () {\n            _this.isGetPending = false;\n          });\n        }\n      }\n    },\n    fetchData: function fetchData() {\n      if (this.local || this.id === 'new') {\n        return;\n      } else if (this.id !== null && this.id !== undefined && !this.query && !this.fetchQuery) {\n        return this.getData();\n      } else {\n        // eslint-disable-next-line no-console\n        console.log(\"No query and no id provided, so no data will be fetched.\");\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    if (!this.$FeathersVuex) {\n      throw new Error(\"You must first Vue.use the FeathersVuex plugin before using the 'FeathersVuexGet' component.\");\n    }\n\n    if (!this.$store.state[this.service]) {\n      throw new Error(\"The '\".concat(this.service, \"' plugin is not registered with feathers-vuex\"));\n    }\n\n    var watch = Array.isArray(this.watch) ? this.watch : [this.watch];\n\n    if (this.fetchQuery || this.query || this.id !== null && this.id !== undefined) {\n      watch.forEach(function (prop) {\n        if (typeof prop !== 'string') {\n          throw new Error(\"Values in the 'watch' array must be strings.\");\n        }\n\n        if (_this2.fetchQuery) {\n          if (prop.startsWith('query')) {\n            prop.replace('query', 'fetchQuery');\n          }\n        }\n\n        _this2.$watch(prop, _this2.fetchData);\n      });\n      this.fetchData();\n    }\n  },\n  render: function render() {\n    return this.$scopedSlots.default(this.scope);\n  }\n};",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/FeathersVuexGet.js"],"names":["props","service","type","String","required","serverAlias","default","query","Object","queryWhen","Boolean","Function","id","Number","fetchQuery","watch","Array","local","editScope","scope","data","isFindPending","isGetPending","computed","item","getArgs","$store","getters","length","defaultScope","methods","queryToUse","keys","push","getData","dispatch","then","fetchData","undefined","console","log","created","$FeathersVuex","Error","state","isArray","forEach","prop","startsWith","replace","$watch","render","$scopedSlots"],"mappings":"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","sourcesContent":["export default {\n  props: {\n    /**\n     * The path of the service from which to pull records.\n     */\n    service: {\n      type: String,\n      required: true\n    },\n    /**\n     * Must match the `serverAlias` that was provided in the service's configuration.\n     */\n    serverAlias: {\n      type: String,\n      default: 'api'\n    },\n    /**\n     * By default, `query` is used to get data from the Vuex store AND the API request.\n     * If you specify a `fetchQuery`, then `query` will only be used for the Vuex store.\n     */\n    query: {\n      type: Object,\n      default: null\n    },\n    /**\n     * When `queryWhen` evaluates to false, no API request will be made.\n     */\n    queryWhen: {\n      type: [Boolean, Function],\n      default: true\n    },\n    // For get requests\n    id: {\n      type: [Number, String],\n      default: null\n    },\n    /**\n     * If a separate query is desired to fetch data, use fetchQuery\n     * The watchers are automatically updated, so you don't have to write 'fetchQuery.propName'\n     */\n    fetchQuery: {\n      type: Object\n    },\n    /**\n     * Specify which properties in the query to watch and re-trigger API requests.\n     */\n    watch: {\n      type: [String, Array],\n      default() {\n        return []\n      }\n    },\n    /**\n     * Set `local` to true to only requests from the Vuex data store and not make API requests.\n     */\n    local: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * This function is called by the getter and allows you to intercept the `item` in the\n     * response to pass it into the parent component's scope.  It's a dirty little cheater\n     * function (because it's called from a getter), but it actually works well  ;)\n     */\n    editScope: {\n      type: Function,\n      default(scope) {\n        return scope\n      }\n    }\n  },\n  data: () => ({\n    isFindPending: false,\n    isGetPending: false\n  }),\n  computed: {\n    item() {\n      const getArgs = this.getArgs(this.query)\n      if (this.id) {\n        return (\n          this.$store.getters[`${this.service}/get`](\n            getArgs.length === 1 ? this.id : getArgs\n          ) || null\n        )\n      } else {\n        return null\n      }\n    },\n    scope() {\n      const { item, isGetPending } = this\n      const defaultScope = { item, isGetPending }\n      return this.editScope(defaultScope) || defaultScope\n    }\n  },\n  methods: {\n    getArgs(queryToUse) {\n      const query = queryToUse || this.fetchQuery || this.query\n      const getArgs = [this.id]\n      if (query && Object.keys(query).length > 0) {\n        getArgs.push({ query })\n      }\n      return getArgs\n    },\n    getData() {\n      const getArgs = this.getArgs()\n      if (\n        typeof this.queryWhen === 'function'\n          ? this.queryWhen(...getArgs)\n          : this.queryWhen\n      ) {\n        this.isGetPending = true\n        if (this.id) {\n          return this.$store\n            .dispatch(\n              `${this.service}/get`,\n              getArgs.length === 1 ? this.id : getArgs\n            )\n            .then(() => {\n              this.isGetPending = false\n            })\n        }\n      }\n    },\n    fetchData() {\n      if (this.local || this.id === 'new') {\n        return\n      } else if (\n        this.id !== null &&\n        this.id !== undefined &&\n        !this.query &&\n        !this.fetchQuery\n      ) {\n        return this.getData()\n      } else {\n        // eslint-disable-next-line no-console\n        console.log(`No query and no id provided, so no data will be fetched.`)\n      }\n    }\n  },\n  created() {\n    if (!this.$FeathersVuex) {\n      throw new Error(\n        `You must first Vue.use the FeathersVuex plugin before using the 'FeathersVuexGet' component.`\n      )\n    }\n    if (!this.$store.state[this.service]) {\n      throw new Error(\n        `The '${this.service}' plugin is not registered with feathers-vuex`\n      )\n    }\n    const watch = Array.isArray(this.watch) ? this.watch : [this.watch]\n    if (\n      this.fetchQuery ||\n      this.query ||\n      (this.id !== null && this.id !== undefined)\n    ) {\n      watch.forEach(prop => {\n        if (typeof prop !== 'string') {\n          throw new Error(`Values in the 'watch' array must be strings.`)\n        }\n        if (this.fetchQuery) {\n          if (prop.startsWith('query')) {\n            prop.replace('query', 'fetchQuery')\n          }\n        }\n        this.$watch(prop, this.fetchData)\n      })\n      this.fetchData()\n    }\n  },\n  render() {\n    return this.$scopedSlots.default(this.scope)\n  }\n}\n"]}]}