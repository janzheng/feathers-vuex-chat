{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/index.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/index.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport FeathersVuexFind from \"./FeathersVuexFind\";\nimport FeathersVuexGet from \"./FeathersVuexGet\";\nimport FeathersVuexFormWrapper from \"./FeathersVuexFormWrapper\";\nimport makeFindMixin from \"./make-find-mixin\";\nimport makeGetMixin from \"./make-get-mixin\";\nimport { globalModels as models } from \"./service-module/global-models\";\nimport { clients, addClient } from \"./service-module/global-clients\";\nimport makeModel from \"./service-module/make-model\";\nimport prepareMakeServicePlugin from \"./service-module/make-service-plugin\";\nimport prepareMakeAuthPlugin from \"./auth-module/make-auth-plugin\";\nimport { initAuth } from \"./utils\";\nimport { FeathersVuex } from \"./vue-plugin/vue-plugin\";\nvar defaultOptions = {\n  autoRemove: false,\n  addOnUpsert: false,\n  enableEvents: true,\n  idField: 'id',\n  tempIdField: '__id',\n  debug: false,\n  keepCopiesInStore: false,\n  nameStyle: 'short',\n  paramsForServer: [],\n  preferUpdate: false,\n  replaceItems: false,\n  serverAlias: 'api',\n  skipRequestIfExists: false,\n  whitelist: [] // Custom query operators that will be allowed in the find getter.\n\n};\nexport default function feathersVuex(feathers, options) {\n  if (!feathers || !feathers.service) {\n    throw new Error('The first argument to feathersVuex must be a feathers client.');\n  }\n\n  options = Object.assign({}, defaultOptions, options);\n\n  if (!options.serverAlias) {\n    throw new Error(\"You must provide a 'serverAlias' in the options to feathersVuex\");\n  }\n\n  addClient({\n    client: feathers,\n    serverAlias: options.serverAlias\n  });\n  var BaseModel = makeModel(options);\n  var makeServicePlugin = prepareMakeServicePlugin(options);\n  var makeAuthPlugin = prepareMakeAuthPlugin(feathers, options);\n  return {\n    makeServicePlugin: makeServicePlugin,\n    BaseModel: BaseModel,\n    makeAuthPlugin: makeAuthPlugin,\n    FeathersVuex: FeathersVuex,\n    models: models,\n    clients: clients\n  };\n}\nexport { initAuth, FeathersVuexFind, FeathersVuexGet, FeathersVuexFormWrapper, FeathersVuex, makeFindMixin, makeGetMixin, models, clients };",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/index.js"],"names":["FeathersVuexFind","FeathersVuexGet","FeathersVuexFormWrapper","makeFindMixin","makeGetMixin","globalModels","models","clients","addClient","makeModel","prepareMakeServicePlugin","prepareMakeAuthPlugin","initAuth","FeathersVuex","defaultOptions","autoRemove","addOnUpsert","enableEvents","idField","tempIdField","debug","keepCopiesInStore","nameStyle","paramsForServer","preferUpdate","replaceItems","serverAlias","skipRequestIfExists","whitelist","feathersVuex","feathers","options","service","Error","Object","assign","client","BaseModel","makeServicePlugin","makeAuthPlugin"],"mappings":"AAAA;;;;;AAKA,OAAOA,gBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,SAASC,YAAY,IAAIC,MAAzB;AACA,SAASC,OAAT,EAAkBC,SAAlB;AACA,OAAOC,SAAP;AACA,OAAOC,wBAAP;AACA,OAAOC,qBAAP;AACA,SAASC,QAAT;AACA,SAASC,YAAT;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,KADS;AAErBC,EAAAA,WAAW,EAAE,KAFQ;AAGrBC,EAAAA,YAAY,EAAE,IAHO;AAIrBC,EAAAA,OAAO,EAAE,IAJY;AAKrBC,EAAAA,WAAW,EAAE,MALQ;AAMrBC,EAAAA,KAAK,EAAE,KANc;AAOrBC,EAAAA,iBAAiB,EAAE,KAPE;AAQrBC,EAAAA,SAAS,EAAE,OARU;AASrBC,EAAAA,eAAe,EAAE,EATI;AAUrBC,EAAAA,YAAY,EAAE,KAVO;AAWrBC,EAAAA,YAAY,EAAE,KAXO;AAYrBC,EAAAA,WAAW,EAAE,KAZQ;AAarBC,EAAAA,mBAAmB,EAAE,KAbA;AAcrBC,EAAAA,SAAS,EAAE,EAdU,CAcP;;AAdO,CAAvB;AAgBA,eAAe,SAASC,YAAT,CAAsBC,QAAtB,EAAgCC,OAAhC,EAAyC;AACtD,MAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACE,OAA3B,EAAoC;AAClC,UAAM,IAAIC,KAAJ,CACJ,+DADI,CAAN;AAGD;;AACDF,EAAAA,OAAO,GAAGG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,cAAlB,EAAkCiB,OAAlC,CAAV;;AACA,MAAI,CAACA,OAAO,CAACL,WAAb,EAA0B;AACxB,UAAM,IAAIO,KAAJ,mEAAN;AAGD;;AACDzB,EAAAA,SAAS,CAAC;AAAE4B,IAAAA,MAAM,EAAEN,QAAV;AAAoBJ,IAAAA,WAAW,EAAEK,OAAO,CAACL;AAAzC,GAAD,CAAT;AACA,MAAMW,SAAS,GAAG5B,SAAS,CAACsB,OAAD,CAA3B;AACA,MAAMO,iBAAiB,GAAG5B,wBAAwB,CAACqB,OAAD,CAAlD;AACA,MAAMQ,cAAc,GAAG5B,qBAAqB,CAACmB,QAAD,EAAWC,OAAX,CAA5C;AACA,SAAO;AACLO,IAAAA,iBAAiB,EAAjBA,iBADK;AAELD,IAAAA,SAAS,EAATA,SAFK;AAGLE,IAAAA,cAAc,EAAdA,cAHK;AAIL1B,IAAAA,YAAY,EAAZA,YAJK;AAKLP,IAAAA,MAAM,EAANA,MALK;AAMLC,IAAAA,OAAO,EAAPA;AANK,GAAP;AAQD;AACD,SACEK,QADF,EAEEZ,gBAFF,EAGEC,eAHF,EAIEC,uBAJF,EAKEW,YALF,EAMEV,aANF,EAOEC,YAPF,EAQEE,MARF,EASEC,OATF","sourcesContent":["/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport FeathersVuexFind from './FeathersVuexFind'\nimport FeathersVuexGet from './FeathersVuexGet'\nimport FeathersVuexFormWrapper from './FeathersVuexFormWrapper'\nimport makeFindMixin from './make-find-mixin'\nimport makeGetMixin from './make-get-mixin'\nimport { globalModels as models } from './service-module/global-models'\nimport { clients, addClient } from './service-module/global-clients'\nimport makeModel from './service-module/make-model'\nimport prepareMakeServicePlugin from './service-module/make-service-plugin'\nimport prepareMakeAuthPlugin from './auth-module/make-auth-plugin'\nimport { initAuth } from './utils'\nimport { FeathersVuex } from './vue-plugin/vue-plugin'\nconst defaultOptions = {\n  autoRemove: false,\n  addOnUpsert: false,\n  enableEvents: true,\n  idField: 'id',\n  tempIdField: '__id',\n  debug: false,\n  keepCopiesInStore: false,\n  nameStyle: 'short',\n  paramsForServer: [],\n  preferUpdate: false,\n  replaceItems: false,\n  serverAlias: 'api',\n  skipRequestIfExists: false,\n  whitelist: [] // Custom query operators that will be allowed in the find getter.\n}\nexport default function feathersVuex(feathers, options) {\n  if (!feathers || !feathers.service) {\n    throw new Error(\n      'The first argument to feathersVuex must be a feathers client.'\n    )\n  }\n  options = Object.assign({}, defaultOptions, options)\n  if (!options.serverAlias) {\n    throw new Error(\n      `You must provide a 'serverAlias' in the options to feathersVuex`\n    )\n  }\n  addClient({ client: feathers, serverAlias: options.serverAlias })\n  const BaseModel = makeModel(options)\n  const makeServicePlugin = prepareMakeServicePlugin(options)\n  const makeAuthPlugin = prepareMakeAuthPlugin(feathers, options)\n  return {\n    makeServicePlugin,\n    BaseModel,\n    makeAuthPlugin,\n    FeathersVuex,\n    models,\n    clients\n  }\n}\nexport {\n  initAuth,\n  FeathersVuexFind,\n  FeathersVuexGet,\n  FeathersVuexFormWrapper,\n  FeathersVuex,\n  makeFindMixin,\n  makeGetMixin,\n  models,\n  clients\n}\n"]}]}