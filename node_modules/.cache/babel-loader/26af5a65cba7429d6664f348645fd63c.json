{"remainingRequest":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js!/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/service-module.getters.js","dependencies":[{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/service-module.getters.js","mtime":1576553531990},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/cache-loader/dist/cjs.js","mtime":1576617922850},{"path":"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/babel-loader/lib/index.js","mtime":1572970632149}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\n\n/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport sift from 'sift';\nimport { _ } from '@feathersjs/commons';\nimport { filterQuery, sorter, select } from '@feathersjs/adapter-commons';\nimport { globalModels as models } from \"./global-models\";\nimport _get from 'lodash/get';\nimport _omit from 'lodash/omit';\nvar FILTERS = ['$sort', '$limit', '$skip', '$select'];\nvar OPERATORS = ['$in', '$nin', '$lt', '$lte', '$gt', '$gte', '$ne', '$or'];\nvar additionalOperators = ['$elemMatch'];\nvar defaultOps = FILTERS.concat(OPERATORS).concat(additionalOperators);\nexport default function makeServiceGetters() {\n  return {\n    list: function list(state) {\n      return state.ids.map(function (id) {\n        return state.keyedById[id];\n      });\n    },\n    find: function find(state) {\n      return function (params) {\n        params = params || {}; // Set params.temps to true to include the tempsById records\n\n        params.temps = params.hasOwnProperty('temps') ? params.temps : false;\n        var paramsForServer = state.paramsForServer,\n            whitelist = state.whitelist;\n\n        var q = _omit(params.query || {}, paramsForServer);\n\n        var customOperators = Object.keys(q).filter(function (k) {\n          return k[0] === '$' && !defaultOps.includes(k);\n        });\n\n        var cleanQuery = _omit(q, customOperators);\n\n        var _filterQuery = filterQuery(cleanQuery, {\n          operators: additionalOperators.concat(whitelist)\n        }),\n            query = _filterQuery.query,\n            filters = _filterQuery.filters;\n\n        var values = _.values(state.keyedById);\n\n        if (params.temps) {\n          values = values.concat(_.values(state.tempsById));\n        }\n\n        values = values.filter(sift(query));\n        var total = values.length;\n\n        if (filters.$sort) {\n          values.sort(sorter(filters.$sort));\n        }\n\n        if (filters.$skip) {\n          values = values.slice(filters.$skip);\n        }\n\n        if (typeof filters.$limit !== 'undefined') {\n          values = values.slice(0, filters.$limit);\n        }\n\n        if (filters.$select) {\n          values = values.map(function (value) {\n            return _.pick.apply(_, [value].concat(_toConsumableArray(filters.$select.slice())));\n          });\n        }\n\n        return {\n          total: total,\n          limit: filters.$limit || 0,\n          skip: filters.$skip || 0,\n          data: values\n        };\n      };\n    },\n    get: function get(state) {\n      return function (id) {\n        var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var keyedById = state.keyedById,\n            tempsById = state.tempsById,\n            idField = state.idField,\n            tempIdField = state.tempIdField;\n        var record = keyedById[id] ? select(params, idField)(keyedById[id]) : undefined;\n        var tempRecord = tempsById[id] ? select(params, tempIdField)(tempsById[id]) : undefined;\n        return record || tempRecord;\n      };\n    },\n    getCopyById: function getCopyById(state) {\n      return function (id) {\n        var servicePath = state.servicePath,\n            keepCopiesInStore = state.keepCopiesInStore,\n            serverAlias = state.serverAlias;\n\n        if (keepCopiesInStore) {\n          return state.copiesById[id];\n        } else {\n          var Model = _get(models, \"[\".concat(serverAlias, \"].byServicePath[\").concat(servicePath, \"]\"));\n\n          return Model.copiesById[id];\n        }\n      };\n    }\n  };\n}",{"version":3,"sources":["/Users/janzheng/Desktop/projects/_lessons/feathersjs/feathers-chat-vuex/node_modules/feathers-vuex/dist/service-module/service-module.getters.js"],"names":["sift","_","filterQuery","sorter","select","globalModels","models","_get","_omit","FILTERS","OPERATORS","additionalOperators","defaultOps","concat","makeServiceGetters","list","state","ids","map","id","keyedById","find","params","temps","hasOwnProperty","paramsForServer","whitelist","q","query","customOperators","Object","keys","filter","k","includes","cleanQuery","operators","filters","values","tempsById","total","length","$sort","sort","$skip","slice","$limit","$select","value","pick","limit","skip","data","get","idField","tempIdField","record","undefined","tempRecord","getCopyById","servicePath","keepCopiesInStore","serverAlias","copiesById","Model"],"mappings":"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","sourcesContent":["/*\neslint\n@typescript-eslint/explicit-function-return-type: 0,\n@typescript-eslint/no-explicit-any: 0\n*/\nimport sift from 'sift'\nimport { _ } from '@feathersjs/commons'\nimport { filterQuery, sorter, select } from '@feathersjs/adapter-commons'\nimport { globalModels as models } from './global-models'\nimport _get from 'lodash/get'\nimport _omit from 'lodash/omit'\nconst FILTERS = ['$sort', '$limit', '$skip', '$select']\nconst OPERATORS = ['$in', '$nin', '$lt', '$lte', '$gt', '$gte', '$ne', '$or']\nconst additionalOperators = ['$elemMatch']\nconst defaultOps = FILTERS.concat(OPERATORS).concat(additionalOperators)\nexport default function makeServiceGetters() {\n  return {\n    list(state) {\n      return state.ids.map(id => state.keyedById[id])\n    },\n    find: state => params => {\n      params = params || {}\n      // Set params.temps to true to include the tempsById records\n      params.temps = params.hasOwnProperty('temps') ? params.temps : false\n      const { paramsForServer, whitelist } = state\n      const q = _omit(params.query || {}, paramsForServer)\n      const customOperators = Object.keys(q).filter(\n        k => k[0] === '$' && !defaultOps.includes(k)\n      )\n      const cleanQuery = _omit(q, customOperators)\n      const { query, filters } = filterQuery(cleanQuery, {\n        operators: additionalOperators.concat(whitelist)\n      })\n      let values = _.values(state.keyedById)\n      if (params.temps) {\n        values = values.concat(_.values(state.tempsById))\n      }\n      values = values.filter(sift(query))\n      const total = values.length\n      if (filters.$sort) {\n        values.sort(sorter(filters.$sort))\n      }\n      if (filters.$skip) {\n        values = values.slice(filters.$skip)\n      }\n      if (typeof filters.$limit !== 'undefined') {\n        values = values.slice(0, filters.$limit)\n      }\n      if (filters.$select) {\n        values = values.map(value => _.pick(value, ...filters.$select.slice()))\n      }\n      return {\n        total,\n        limit: filters.$limit || 0,\n        skip: filters.$skip || 0,\n        data: values\n      }\n    },\n    get: state => (id, params = {}) => {\n      const { keyedById, tempsById, idField, tempIdField } = state\n      const record = keyedById[id]\n        ? select(params, idField)(keyedById[id])\n        : undefined\n      const tempRecord = tempsById[id]\n        ? select(params, tempIdField)(tempsById[id])\n        : undefined\n      return record || tempRecord\n    },\n    getCopyById: state => id => {\n      const { servicePath, keepCopiesInStore, serverAlias } = state\n      if (keepCopiesInStore) {\n        return state.copiesById[id]\n      } else {\n        const Model = _get(\n          models,\n          `[${serverAlias}].byServicePath[${servicePath}]`\n        )\n        return Model.copiesById[id]\n      }\n    }\n  }\n}\n"]}]}